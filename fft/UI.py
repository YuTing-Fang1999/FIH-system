# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.Qt import Qt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QPixmap, QPainter
from PyQt5.QtCore import QSize
import numpy as np

class ImageViewer(QtWidgets.QLabel):
    pixmap = None
    _sizeHint = QSize()
    ratio = Qt.KeepAspectRatio
    transformation = Qt.SmoothTransformation

    def __init__(self, pixmap=None):
        super().__init__()
        self.setPixmap(pixmap)

    def setPixmap(self, pixmap):
        if self.pixmap != pixmap:
            self.pixmap = pixmap
            if isinstance(pixmap, QPixmap):
                self._sizeHint = pixmap.size()
            else:
                self._sizeHint = QSize()
            self.updateGeometry()
            self.updateScaled()

    def setAspectRatio(self, ratio):
        if self.ratio != ratio:
            self.ratio = ratio
            self.updateScaled()

    def setTransformation(self, transformation):
        if self.transformation != transformation:
            self.transformation = transformation
            self.updateScaled()

    def updateScaled(self):
        if self.pixmap:
            self.scaled = self.pixmap.scaled(self.size(), self.ratio, self.transformation)
        self.update()

    def sizeHint(self):
        return self._sizeHint

    def resizeEvent(self, event):
        self.updateScaled()

    def paintEvent(self, event): #text不見的原因
        if not self.pixmap:
            return
        qp = QPainter(self)
        r = self.scaled.rect()
        r.moveCenter(self.rect().center())
        qp.drawPixmap(r, self.scaled)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 570)
        MainWindow.setStyleSheet("QMainWindow {background-color: rgb(66, 66, 66);}"
                                """
                                QLabel {
                                    font-size:14pt; font-family:微軟正黑體; font-weight: bold;
                                    background-color: rgb(255, 255, 255);
                                    border-color: rgb(0, 0, 0);
                                    border-width : 1.2px;
                                    border-style:inset;
                                    }
                                """
                                "QPushButton {font-size:14pt; font-family:微軟正黑體; font-weight: bold; background-color:rgb(255, 170, 0);}")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.gridLayout_parent = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_parent.setContentsMargins(-1, 4, -1, 4)
        self.gridLayout_parent.setSpacing(5)

        # btn
        self.horizontalLayout_btn = QtWidgets.QHBoxLayout()
        self.horizontalLayout_btn.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_btn.setSpacing(15)
        self.open_img_btn = QtWidgets.QPushButton(self.centralwidget)
        self.horizontalLayout_btn.addWidget(self.open_img_btn)
        self.open_img_btn_2 = QtWidgets.QPushButton(self.centralwidget)
        self.horizontalLayout_btn.addWidget(self.open_img_btn_2)
        self.btn_roi = QtWidgets.QPushButton(self.centralwidget)
        self.horizontalLayout_btn.addWidget(self.btn_roi)
        self.gridLayout_parent.addLayout(self.horizontalLayout_btn, 0, 0, 1, 1)

        # below
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSpacing(0)

        # ImageViewer
        self.img_block = ImageViewer()
        self.img_block.setAlignment(QtCore.Qt.AlignCenter)
        self.gridLayout.addWidget(self.img_block, 0, 0, 1, 1)

        self.img_block_2 = ImageViewer()
        self.img_block_2.setAlignment(QtCore.Qt.AlignCenter)
        self.gridLayout.addWidget(self.img_block_2, 1, 0, 1, 1)

        # fft viewer
        self.fft_block = ImageViewer()
        self.fft_block.setAlignment(QtCore.Qt.AlignCenter)
        self.gridLayout.addWidget(self.fft_block, 0, 1, 1, 1)

        self.fft_block_2 = ImageViewer()
        self.fft_block_2.setAlignment(QtCore.Qt.AlignCenter)
        self.gridLayout.addWidget(self.fft_block_2, 1, 1, 1, 1)

        # tab
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)\

        # 灰階直方圖
        tab = QtWidgets.QWidget()
        tab_wraper = QtWidgets.QVBoxLayout(tab)
        tab_wraper.setContentsMargins(1, 1, 1, 1)
        verticalLayout_tab = QtWidgets.QVBoxLayout()
        verticalLayout_tab.setSpacing(1)  
        self.his = ImageViewer()
        self.his.setAlignment(QtCore.Qt.AlignCenter)
        verticalLayout_tab.addWidget(self.his)
        self.his_2 = ImageViewer()
        self.his_2.setAlignment(QtCore.Qt.AlignCenter)
        verticalLayout_tab.addWidget(self.his_2)
        tab_wraper.addLayout(verticalLayout_tab)
        self.tabWidget.addTab(tab, "灰階直方圖")

        # 頻率振幅直方圖
        tab = QtWidgets.QWidget()
        tab_wraper = QtWidgets.QVBoxLayout(tab)
        tab_wraper.setContentsMargins(1, 1, 1, 1)
        verticalLayout_tab = QtWidgets.QVBoxLayout()
        verticalLayout_tab.setSpacing(1)  
        self.fft_his = ImageViewer()
        self.fft_his.setAlignment(QtCore.Qt.AlignCenter)
        verticalLayout_tab.addWidget(self.fft_his)
        self.fft_his_2 = ImageViewer()
        self.fft_his_2.setAlignment(QtCore.Qt.AlignCenter)
        verticalLayout_tab.addWidget(self.fft_his_2)
        tab_wraper.addLayout(verticalLayout_tab)
        self.tabWidget.addTab(tab, "頻率振幅直方圖")
 
        # PSD
        # tab = QtWidgets.QWidget()
        # tab_wraper = QtWidgets.QVBoxLayout(tab)
        # tab_wraper.setContentsMargins(1, 1, 1, 1)
        # verticalLayout_tab = QtWidgets.QVBoxLayout()
        # verticalLayout_tab.setSpacing(1)  
        # self.psd_his = ImageViewer()
        # self.psd_his.setAlignment(QtCore.Qt.AlignCenter)
        # verticalLayout_tab.addWidget(self.psd_his)
        # self.psd_his_2 = ImageViewer()
        # self.psd_his_2.setAlignment(QtCore.Qt.AlignCenter)
        # verticalLayout_tab.addWidget(self.psd_his_2)
        # tab_wraper.addLayout(verticalLayout_tab)
        # self.tabWidget.addTab(tab, "PSD")

        self.gridLayout.addWidget(self.tabWidget, 0, 2, 2, 1)

        self.gridLayout.setColumnStretch(0, 2)
        self.gridLayout.setColumnStretch(1, 2)
        self.gridLayout.setColumnStretch(2, 3)
        self.gridLayout_parent.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_parent.setRowStretch(0, 1)
        self.gridLayout_parent.setRowStretch(1, 6)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1060, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Image Analysis"))
        self.open_img_btn.setText(_translate("MainWindow", "open image1"))
        self.open_img_btn_2.setText(_translate("MainWindow", "open image2"))
        self.btn_roi.setText(_translate("MainWindow", "ROI"))
        # self.btn_all.setText(_translate("MainWindow", "ALL"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
